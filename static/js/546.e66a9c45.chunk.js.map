{"version":3,"file":"static/js/546.e66a9c45.chunk.js","mappings":"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","sources":["components/Admin/Modal.js","components/Admin/ContactList.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Modal = ({ contact, onCancel, onConfirm }) => {\r\n  return (\r\n    <div className=\"tw-fixed tw-inset-0 tw-flex tw-items-center tw-justify-center tw-bg-black tw-bg-opacity-50\">\r\n      <div className=\"tw-bg-white tw-rounded-lg tw-overflow-hidden tw-shadow-xl tw-transform tw-transition-all tw-sm:max-w-lg tw-w-full\">\r\n        <div className=\"tw-px-4 tw-py-5 tw-sm:p-6\">\r\n          <h3 className=\"tw-text-lg tw-leading-6 tw-font-medium tw-text-gray-900\">\r\n            Delete Contact\r\n          </h3>\r\n          <div className=\"tw-mt-2\">\r\n            <p className=\"tw-text-sm tw-text-gray-500\">\r\n              Are you sure you want to delete the contact <strong>{contact.firstName}</strong>?\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"tw-bg-gray-50 tw-px-4 tw-py-3 tw-sm:px-6 tw-flex tw-justify-end\">\r\n          <button\r\n            className=\" tw-border tw-border-gray-300 tw-rounded tw-shadow-sm tw-px-4 tw-py-2 tw-bg-red-600 tw-text-white tw-mr-2\"\r\n            onClick={onConfirm}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            className=\"tw-border tw-border-gray-300 tw-rounded tw-shadow-sm tw-px-4 tw-py-2 tw-bg-gray-500 tw-text-white\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from './Modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuthContext } from '../../hooks/useAuthContext';\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const {admin} = useAuthContext()\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [contactToDelete, setContactToDelete] = useState(null);\r\n  const [csrfToken, setCsrfToken] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await axios.get('/api/contacts',{\r\n          headers:{\r\n            'Authorization':`Bearer ${admin.token}`\r\n        }\r\n        });\r\n        setContacts(response.data);\r\n      } catch (err) {\r\n        setError('Failed to fetch contacts');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    const fetchCsrfToken = async () => {\r\n        const response = await fetch('/api/csrf-token');\r\n        const data = await response.json();\r\n        setCsrfToken(data.csrfToken);\r\n      };\r\n    fetchContacts();\r\n    fetchCsrfToken();\r\n  }, [admin]);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/contacts/${id}`, {\r\n        headers: {\r\n        'X-CSRF-TOKEN': csrfToken,\r\n        'Authorization':`Bearer ${admin.token}`\r\n        }\r\n      });\r\n      setContacts(contacts.filter(contact => contact._id !== id));\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error('Failed to delete contact', error);\r\n    }\r\n  };\r\n\r\n  const handleView = (id) => {\r\n    navigate(`/admin/contacts/${id}`); \r\n    console.log('View contact with id:', id);\r\n  };\r\n\r\n  const openModal = (contact) => {\r\n    setContactToDelete(contact);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setContactToDelete(null);\r\n  };\r\n\r\n  if (loading) return <p className=\"tw-text-center tw-text-gray-500\">Loading...</p>;\r\n  if (error) return <p className=\"tw-text-center tw-text-red-500\">{error}</p>;\r\n  if (!contacts.length) return <p className=\"tw-text-center tw-text-gray-500\">No contacts found</p>;\r\n\r\n  return (\r\n    <div className=\"tw-container tw-mx-auto tw-p-4 tw-my-16\">\r\n      <h2 className=\"tw-text-4xl tw-font-semibold tw-text-center tw-mb-16 tw-text-blue-500\">Contact List</h2>\r\n      <table className=\"tw-min-w-full tw-divide-y tw-divide-gray-200\">\r\n        <thead className=\"tw-bg-gray-100\">\r\n          <tr>\r\n            <th className=\"tw-px-6 tw-py-3 tw-text-left tw-text-xs tw-font-medium tw-text-gray-500 tw-uppercase tw-tracking-wider\">First Name</th>\r\n            <th className=\"tw-px-6 tw-py-3 tw-text-left tw-text-xs tw-font-medium tw-text-gray-500 tw-uppercase tw-tracking-wider\">Last Name</th>\r\n            <th className=\"tw-px-6 tw-py-3 tw-text-left tw-text-xs tw-font-medium tw-text-gray-500 tw-uppercase tw-tracking-wider\">Phone</th>\r\n            <th className=\"tw-px-6 tw-py-3 tw-text-left tw-text-xs tw-font-medium tw-text-gray-500 tw-uppercase tw-tracking-wider\">Email</th>\r\n            <th className=\"tw-px-6 tw-py-3 tw-text-left tw-text-xs tw-font-medium tw-text-gray-500 tw-uppercase tw-tracking-wider\">Organization Name</th>\r\n            <th className=\"tw-px-6 tw-py-3 tw-text-left tw-text-xs tw-font-medium tw-text-gray-500 tw-uppercase tw-tracking-wider\">Date</th>\r\n            <th className=\"tw-px-6 tw-py-3 tw-text-left tw-text-xs tw-font-medium tw-text-gray-500 tw-uppercase tw-tracking-wider\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tw-bg-white tw-divide-y tw-divide-gray-200\">\r\n          {contacts.map(contact => (\r\n            <tr key={contact._id}>\r\n              <td className=\"tw-px-6 tw-py-4 tw-whitespace-nowrap\">{contact.firstName}</td>\r\n              <td className=\"tw-px-6 tw-py-4 tw-whitespace-nowrap\">{contact.lastName}</td>\r\n              <td className=\"tw-px-6 tw-py-4 tw-whitespace-nowrap\">{contact.phone}</td>\r\n              <td className=\"tw-px-6 tw-py-4 tw-whitespace-nowrap\">{contact.email}</td>\r\n              <td className=\"tw-px-6 tw-py-4 tw-whitespace-nowrap\">{contact.organizationName}</td>\r\n              <td className=\"tw-px-6 tw-py-4 tw-whitespace-nowrap\">{contact.createdAt}</td>\r\n              <td className=\"tw-px-6 tw-py-4 tw-whitespace-nowrap\">\r\n                <button\r\n                  className=\"tw-bg-blue-500 tw-text-white tw-px-3 tw-py-1 tw-rounded tw-mr-2\"\r\n                  onClick={() => handleView(contact._id)}\r\n                >\r\n                  <i className='fal fa-eye'></i>\r\n                </button>\r\n                <button\r\n                  className=\"tw-bg-red-500 tw-text-white tw-px-3 tw-py-1 tw-rounded\"\r\n                  onClick={() => openModal(contact)}\r\n                >\r\n                 <i className='fal fa-trash-can'></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {showModal && (\r\n        <Modal\r\n          contact={contactToDelete}\r\n          onCancel={closeModal}\r\n          onConfirm={() => handleDelete(contactToDelete._id)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"names":["_ref","contact","onCancel","onConfirm","_jsx","className","children","_jsxs","firstName","onClick","ContactList","contacts","setContacts","useState","admin","useAuthContext","loading","setLoading","error","setError","showModal","setShowModal","contactToDelete","setContactToDelete","csrfToken","setCsrfToken","navigate","useNavigate","useEffect","async","response","axios","get","headers","concat","token","data","err","fetchContacts","fetch","json","fetchCsrfToken","length","map","lastName","phone","email","organizationName","createdAt","handleView","id","_id","console","log","openModal","Modal","closeModal","delete","filter","handleDelete"],"sourceRoot":""}